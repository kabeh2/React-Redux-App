{"version":3,"sources":["store/reducers/index.js","store/actions/actionTypes.js","components/CryptoCard.jsx","components/CardList.jsx","store/actions/fetchActions.js","components/Pagination.jsx","App.js","serviceWorker.js","index.js"],"names":["initialState","loading","data","error","page","reducer","state","action","type","payload","useStyles","makeStyles","card","display","width","justifyContent","marginBottom","details","flexDirection","content","flex","cover","CryptoCard","classes","Card","className","CardContent","Typography","component","variant","market_cap_rank","name","color","current_price","CardMedia","image","title","theme","root","marginTop","spacing","centerSelf","margin","connect","dispatch","fetchData","getState","pageNumber","axios","get","then","response","fetchDataSuccess","catch","errorMsg","message","fetchDataError","useEffect","console","log","length","style","LinearProgress","map","coin","key","id","gutterBottom","align","prev","next","Button","disabled","onClick","App","Boolean","window","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c191f683.chunk.js","sourcesContent":["import * as actionType from \"../actions/actionTypes\";\n\nconst initialState = {\n  loading: false,\n  data: [],\n  error: \"\",\n  page: 1\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionType.FETCH_DATA_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case actionType.FETCH_DATA_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        data: action.payload\n      };\n    case actionType.FETCH_DATA_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    case actionType.PREV_PAGE:\n      return {\n        ...state,\n        page: state.page - 1\n      };\n    case actionType.NEXT_PAGE:\n      return {\n        ...state,\n        page: state.page + 1\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","export const FETCH_DATA_REQUEST = \"FETCH_DATA_REQUEST\";\nexport const FETCH_DATA_SUCCESS = \"FETCH_DATA_SUCCESS\";\nexport const FETCH_DATA_ERROR = \"FETCH_DATA_ERROR\";\nexport const PREV_PAGE = \"PREV_PAGE\";\nexport const NEXT_PAGE = \"NEXT_PAGE\";\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles(() => ({\n  card: {\n    display: \"flex\",\n    width: 350,\n    justifyContent: \"space-between\",\n    marginBottom: \"2%\"\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  content: {\n    flex: \"1 0 auto\"\n  },\n  cover: {\n    width: 151\n  }\n}));\n\nfunction CryptoCard({ data }) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <div className={classes.details}>\n        <CardContent className={classes.content}>\n          <Typography component=\"h5\" variant=\"h5\">\n            {`${data.market_cap_rank}. ${data.name}`}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"textSecondary\">\n            {`$${data.current_price}`}\n          </Typography>\n        </CardContent>\n      </div>\n      <CardMedia\n        className={classes.cover}\n        image={data.image}\n        title={`${data.name} Icon`}\n      />\n    </Card>\n  );\n}\n\nexport default CryptoCard;\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchData } from \"../store/actions\";\nimport CryptoCard from \"./CryptoCard\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2)\n    }\n  },\n  centerSelf: {\n    margin: \"32px auto\"\n  }\n}));\n\nfunction CardList({ state, data, fetchData, page }) {\n  const classes = useStyles();\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData, page]);\n\n  console.log(data.length);\n\n  return (\n    <div className=\"coin-container\">\n      {state.loading ? (\n        <div\n          className={classes.root}\n          style={{ marginBottom: 48, marginTop: 48 }}\n        >\n          <LinearProgress variant=\"query\" color=\"secondary\" />\n        </div>\n      ) : state.error ? (\n        <h2>{state.error}</h2>\n      ) : data.length > 0 ? (\n        data.map(coin => <CryptoCard data={coin} key={coin.id} />)\n      ) : (\n        <>\n          <Typography\n            className={classes.centerSelf}\n            variant=\"h3\"\n            gutterBottom\n            color=\"secondary\"\n            align=\"center\"\n          >\n            No More Coins Available - Go Back\n          </Typography>\n        </>\n      )}\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    state: state,\n    data: state.data,\n    page: state.page\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchData: () => dispatch(fetchData())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardList);\n","import axios from \"axios\";\nimport * as actionTypes from \"./actionTypes\";\n\nexport const fetchDataRequest = () => {\n  return {\n    type: actionTypes.FETCH_DATA_REQUEST\n  };\n};\n\nexport const fetchDataSuccess = data => {\n  return {\n    type: actionTypes.FETCH_DATA_SUCCESS,\n    payload: data\n  };\n};\n\nexport const fetchDataError = error => {\n  return {\n    type: actionTypes.FETCH_DATA_ERROR,\n    payload: error\n  };\n};\n\nexport const prevPage = () => {\n  return {\n    type: actionTypes.PREV_PAGE\n  };\n};\n\nexport const nextPage = () => {\n  return {\n    type: actionTypes.NEXT_PAGE\n  };\n};\n\nexport const fetchData = () => {\n  return (dispatch, getState) => {\n    dispatch(fetchDataRequest());\n    const pageNumber = getState().page;\n    axios\n      .get(\n        `https://api.coingecko.com/api/v3/coins/markets?vs_currency=cad&order=market_cap_desc&per_page=100&page=${pageNumber}&sparkline=false`\n      )\n      .then(response => {\n        const data = response.data;\n        dispatch(fetchDataSuccess(data));\n      })\n      .catch(error => {\n        const errorMsg = error.message;\n        dispatch(fetchDataError(errorMsg));\n      });\n  };\n};\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\n\nimport * as actionCreator from \"../store/actions\";\n\nfunction Pagination({ page, data, prev, next }) {\n  useEffect(() => {\n    console.log(\"page\", page);\n  }, [page]);\n\n  return (\n    <div>\n      <Button variant=\"contained\" disabled={page === 1} onClick={prev}>\n        Back\n      </Button>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        disabled={data.length === 0}\n        onClick={next}\n      >\n        Next\n      </Button>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    page: state.page,\n    data: state.data\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    prev: () => dispatch(actionCreator.prevPage()),\n    next: () => dispatch(actionCreator.nextPage())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pagination);\n","import React from \"react\";\nimport \"./App.scss\";\nimport CardList from \"./components/CardList\";\nimport Pagination from \"./components/Pagination\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Typography variant=\"h3\" gutterBottom color=\"primary\" align=\"center\">\n        List of Ranked Cryptocurrencies\n      </Typography>\n      <Typography\n        variant=\"subtitle1\"\n        gutterBottom\n        color=\"secondary\"\n        align=\"center\"\n      >\n        React - Async Redux Practice with Coin Gecko API & Material UI Styling\n      </Typography>\n      <CardList />\n      <Pagination />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport reducer from \"./store/reducers\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}